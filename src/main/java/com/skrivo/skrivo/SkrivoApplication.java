package com.skrivo.skrivo;

import com.skrivo.skrivo.nodes.GraphNode;
import com.skrivo.skrivo.nodes.GraphNodeRepository;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;

import java.util.List;
import java.util.Random;

@SpringBootApplication
public class SkrivoApplication {

	Random random = new Random();
	double rangeMin = 0.0;
	double rangeMax = Math.PI;

	public static void main(String[] args) {
		SpringApplication.run(SkrivoApplication.class, args);
	}

	@Bean
	CommandLineRunner commandLineRunner(GraphNodeRepository graphNodeRepository, MongoTemplate mongoTemplate) {
		return args -> {
			GraphNode graphNode1 = new GraphNode(
					0.31993293378583665,
					3.11830276223588,
					rangeMin + (rangeMax - rangeMin) * random.nextDouble(),
					List.of("kicked",
			        "la",
					"suicide",
					"gosh",
					"mmmm",
					"ganas",
					"tla",
					"goods",
					"cruel",
					"press",
					"nutella",
					"throw",
					"albeit",
					"fra",
					"layout",
					"recorded",
					"barbs",
					"screwed",
					"elgato",
					"titas",
					"rizal",
					"bf",
					"fever",
					"inca",
					"llama",
					"truck",
					"lurgy",
					"progress",
					"stage",
					"unagi",
					"laine",
					"plz",
					"lansi",
					"cornwall",
					"marathon",
					"catching",
					"politics",
					"abusive",
					"leh",
					"nathan",
					"agonising",
					"bless",
					"buying",
					"hug",
					"soul",
					"wig",
					"tbf",
					"mv",
					"plisss",
					"cunt"
					),
					List.of(3,
					10,
					2,
					6,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					2,
					1,
					4,
					2,
					1,
					1,
					2,
					1,
					1,
					1,
					2,
					7,
					1,
					1,
					2,
					1,
					1,
					14,
					1,
					1,
					3,
					1,
					1,
					3,
					1,
					1,
					1,
					1,
					1,
					1,
					2,
					1,
					15,
					5,
					1,
					1,
					1,
					1,
					1
					)
			);
			graphNodeRepository.insert(graphNode1);

			GraphNode graphNode2 = new GraphNode(
					0.3425687126900313,
					2.54715549340008,
					rangeMin + (rangeMax - rangeMin) * random.nextDouble(),
					List.of("squats",
							"continuously",
							"scoups",
							"postive",
							"chweet",
							"newblogpost",
							"skills",
							"pallavi",
							"pretoria",
							"sonal",
							"neals",
							"aint",
							"huffpost",
							"volunteer",
							"charge",
							"pwrfl",
							"unexpected",
							"bible",
							"fail",
							"rad",
							"saw",
							"nominiere",
							"muna",
							"manthan",
							"tech",
							"fifa",
							"trick",
							"ourdaughtersourpride",
							"convention",
							"paypal",
							"sports",
							"product",
							"delta",
							"instant",
							"brijresidency",
							"nikkei",
							"swim",
							"wishes",
							"eczema",
							"amm",
							"michael",
							"emily",
							"shoutouts",
							"zaine",
							"compensation",
							"exploring",
							"deep",
							"chef",
							"powys",
							"videographer"
					),
					List.of(1,
							1,
							1,
							2,
							1,
							1,
							3,
							1,
							1,
							1,
							1,
							2,
							1,
							1,
							1,
							1,
							4,
							2,
							1,
							2,
							19,
							1,
							1,
							1,
							2,
							1,
							1,
							5,
							1,
							1,
							2,
							3,
							1,
							1,
							1,
							1,
							1,
							4,
							1,
							1,
							4,
							3,
							1,
							1,
							1,
							1,
							1,
							1,
							1,
							1
					)
			);
			graphNodeRepository.insert(graphNode2);

			GraphNode graphNode3 = new GraphNode(
					0.16342313995656554,
					3.2735705764021827,
					rangeMin + (rangeMax - rangeMin) * random.nextDouble(),
					List.of("rantie",
							"rize",
							"advanced",
							"landlords",
							"fany",
							"mahone",
							"honey",
							"selfshot",
							"balance",
							"aaahhh",
							"ive",
							"thapelo",
							"cancel",
							"winners",
							"repost",
							"physical",
							"talented",
							"discover",
							"scored",
							"ii",
							"birmingham",
							"yoga",
							"relation",
							"billionaires",
							"absolutely",
							"roof",
							"load",
							"hotels",
							"friendzone",
							"brain",
							"cgi",
							"deathbybaconsmell",
							"anything",
							"avoiding",
							"get",
							"buy",
							"horrific",
							"ripped",
							"restrict",
							"year",
							"wavy",
							"funk",
							"magisa",
							"rejection",
							"usually",
							"cost",
							"typed",
							"fluffy",
							"kidding",
							"stiles"
					),
					List.of(1,
							1,
							1,
							1,
							1,
							1,
							2,
							2,
							2,
							2,
							11,
							1,
							1,
							1,
							2,
							2,
							1,
							1,
							1,
							1,
							1,
							2,
							1,
							1,
							4,
							2,
							7,
							3,
							1,
							2,
							1,
							1,
							19,
							1,
							179,
							15,
							2,
							2,
							1,
							28,
							1,
							1,
							1,
							1,
							5,
							1,
							1,
							2,
							3,
							1
					)
			);
			graphNodeRepository.insert(graphNode3);

			GraphNode graphNode4 = new GraphNode(
					0.2740242707449754,
					3.038322134687722,
					rangeMin + (rangeMax - rangeMin) * random.nextDouble(),
					List.of("recommended",
							"intolerant",
							"cayton",
							"pass",
							"gorilla",
							"yeah",
							"op",
							"grandmother",
							"marrish",
							"yo",
							"comparison",
							"afterschool",
							"use",
							"kian",
							"uk",
							"crazyyy",
							"bothered",
							"langs",
							"hotel",
							"whatchya",
							"youtube",
							"unexpect",
							"play",
							"amount",
							"jeremy",
							"bishes",
							"belieb",
							"obyun",
							"jillcruz",
							"hugged",
							"tour",
							"rands",
							"chips",
							"bummed",
							"lil",
							"sobs",
							"missyou",
							"pantes",
							"jinki",
							"jackson",
							"warrior",
							"varsity",
							"fred",
							"ughh",
							"backstage",
							"pc",
							"previous",
							"potager",
							"offers",
							"urgh"
					),
					List.of(1,
							2,
							1,
							10,
							1,
							41,
							1,
							1,
							1,
							4,
							1,
							1,
							13,
							3,
							9,
							1,
							1,
							1,
							5,
							1,
							5,
							1,
							27,
							2,
							1,
							1,
							1,
							1,
							2,
							1,
							7,
							1,
							1,
							1,
							8,
							2,
							1,
							1,
							1,
							4,
							2,
							1,
							1,
							2,
							1,
							2,
							2,
							1,
							3,
							1
					)
			);
			graphNodeRepository.insert(graphNode4);

			GraphNode graphNode5 = new GraphNode(
					0.7453027382208222,
					4.569429999423337,
					rangeMin + (rangeMax - rangeMin) * random.nextDouble(),
					List.of("colder",
							"dudes",
							"families",
							"premiun",
							"huhuhuhuhu",
							"past",
							"marvellous",
							"lvg",
							"pfft",
							"round",
							"sushi",
							"angelica",
							"sneaking",
							"maternity",
							"breaks",
							"memory",
							"data",
							"jillcruz",
							"fantasy",
							"sugar",
							"cuz",
							"fyeah",
							"premium",
							"responded",
							"ep",
							"lady",
							"wentz",
							"talk",
							"supports",
							"niamh",
							"charade",
							"kisses",
							"neighbor",
							"salam",
							"afterschool",
							"daw",
							"lick",
							"uwesiti",
							"meck",
							"striped",
							"scientist",
							"cant",
							"schedule",
							"aisyah",
							"mbulelo",
							"oitnb",
							"though",
							"meaningful",
							"gaga",
							"lasting"
					),
					List.of(1,
							1,
							1,
							1,
							1,
							5,
							1,
							1,
							1,
							2,
							3,
							1,
							1,
							1,
							1,
							1,
							6,
							2,
							1,
							3,
							4,
							1,
							1,
							1,
							3,
							4,
							1,
							29,
							1,
							1,
							1,
							2,
							1,
							1,
							1,
							2,
							1,
							1,
							1,
							1,
							1,
							47,
							7,
							1,
							1,
							1,
							57,
							1,
							1,
							1
					)
			);
			graphNodeRepository.insert(graphNode5);
		};
	}
}
